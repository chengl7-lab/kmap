[general]
debug = false
res_dir = "./kmap_output" # directory for storing results
repetitive_mode = false

[kmer_count]
min_k = 8
max_k = 16
revcom_mode = true # reverse complement mode. If false, revcom will not be merged to the original kmer

[motif_discovery]
p_value_cutoff = 1e-10 # Hamming ball ratio
motif_def_file = "default" # Can be changed to user defined "motif_def_table.csv" file
noise_kmer_file = "None" # Can be set to user defined file, each line is a noise kmer (can be different length) to be removed from the input
save_kmer_cnt_flag = true # if intermediate kmer count result should be saved
motif_pos_density_flag = true # if motif postion distribution will be produced
top_k = 5 # top 5 consensus sequences will be checked
n_trial = 10 # try to find maximumly n_trial motifs from the data
gen_hamball_flag = true # if generating count matrix
min_motif_cnt = 1 # minimumn number of motif sequence on each input read, in the motif co-occurence matrix calculation
n_total_sample = 5000 # total number of sampled kmers for visualization
n_motif_sample = 2500 # number of motif kmers

[visualization]
random_seed = "default" # can be set to a specific number
n_neighbour = 20 # number of neighbours for smoothing
n_max_iter = 2500 # maximum number of iterations in the optimization
learning_rate = 0.01 # learning rate of each optimization step
n_best_result = 10 # the number of low dimensional embeddings with the lowest loss
gen_fig_flag = true # if a figure will be generated
cmap = "Dark2" # color map for figures, can be 'Pastel1', 'Pastel2', 'Paired', 'Accent', 'Dark2', 'Set1', 'Set2', 'Set3', 'tab10', 'tab20', 'tab20b', 'tab20c'



